# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Create .env file
        run: |
          touch /home/ubuntu/actions-runner/_work/transit-onu-gnec-hackathon-backend/transit-onu-gnec-hackathon-backend/src/main/resources/.env
          echo "DB_URL=${{ secrets.IP_PRODUCTION }}" >> /home/ubuntu/actions-runner/_work/transit-onu-gnec-hackathon-backend/transit-onu-gnec-hackathon-backend/src/main/resources/.env
          echo "DB_URL=${{ secrets.DB_URL }}" >> /home/ubuntu/actions-runner/_work/transit-onu-gnec-hackathon-backend/transit-onu-gnec-hackathon-backend/src/main/resources/.env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> /home/ubuntu/actions-runner/_work/transit-onu-gnec-hackathon-backend/transit-onu-gnec-hackathon-backend/src/main/resources/.env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> /home/ubuntu/actions-runner/_work/transit-onu-gnec-hackathon-backend/transit-onu-gnec-hackathon-backend/src/main/resources/.env
      - name: Build with Maven
        run: |
          set -x  # Enable debug output
          process_id=$(sudo lsof -t -i:80) || { echo "lsof command failed"; }

          if [ -n "$process_id" ]; then
            sudo kill -9 "$process_id" || { echo "Failed to kill process $process_id"; }
          else
            echo "No processes found on port 80."
          fi
          mvn -B package --file pom.xml
      - name: Execute Jar File
        run: |
          set -x  # Enable debug output
          process_id=$(sudo lsof -t -i:80) || { echo "lsof command failed"; }

          if [ -n "$process_id" ]; then
            sudo kill -9 "$process_id" || { echo "Failed to kill process $process_id"; }
          else
            echo "No processes found on port 80."
          fi

          # Start the application
          sudo java -jar /home/ubuntu/actions-runner/_work/transit-onu-gnec-hackathon-backend/transit-onu-gnec-hackathon-backend/target/transit-onu-gnec-hackaton-backend-0.0.1-SNAPSHOT.jar &
          # Check if the app is responding on localhost:8080 
          sleep 30
          if curl -I http://localhost:8080; then
            echo "Application is reachable."
          else
            echo "Application did not start or is not reachable."
          fi
